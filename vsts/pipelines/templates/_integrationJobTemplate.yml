jobs:
- job: Job_PythonIntegrationTests
  displayName: Run Python Integration Tests
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  timeoutInMinutes: 300
  variables:
    skipComponentGovernanceDetection: true
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=python"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_DotNetCoreIntegrationTests
  displayName: Run DotNetCore Integration Tests
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=dotnetcore"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_NodeIntegrationTests
  displayName: Run NodeJs Integration Tests
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=node"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml
# Using a multiple jobs  for Node's integration tests
# 1 job's agent does not contain sufficient disk space (10GB)
- job: Job_NodeIntegrationTests2
  displayName: Run NodeJs Integration Tests 2
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=node-2"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_PhpIntegrationTests8_0
  displayName: Run Php Integration Tests 8.0
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=php-8.0"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_PhpIntegrationTests7_4
  displayName: Run Php Integration Tests 7.4
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=php-7.4"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_RubyIntegrationTests
  displayName: Run Ruby Integration Tests
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=ruby"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_DbIntegrationTests
  displayName: Run Database Integration Tests
  dependsOn:
    - Job_BuildImage
    - Job_RuntimeImages
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  timeoutInMinutes: 300
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]false"
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestBuildImages;]false"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]false"
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=db"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]false"
    displayName: 'Set variables'
  - template: _setReleaseTag.yml
  - template: _buildTemplate.yml

- job: Job_DevStorageAccountTest
  displayName: Test Dev Storage Account
  pool:
    name: AzurePipelines-EO
    demands:
      - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
  variables:
    skipComponentGovernanceDetection: true
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 3.1.x'
    inputs:
      version: 3.1.x
  - task: ShellScript@2
    displayName: 'Test Dev storage account'
    inputs:
      scriptPath: ./build/testIntegration.sh
      args: StorageAccountTests=Dev